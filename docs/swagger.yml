openapi: 3.0.0

info:
  title: SMS Management Application API
  description: This is an API that enables users to manage their short messages. The can create and delete contacts and also create SMSs
  version: 1.0.0

servers:
  - url: '{protocol}://127.0.0.1:{port}/v1'
    description: Development server (uses test data)
    variables:
      port:
        enum:
          - "3000"
        default: "3000"
      protocol:
        enum:
          - http
          - https
        default: http

consumes:
  - application/json

content:
  - application/json

paths:
  /contacts:
    post:
      summary: Creates new contacts
      description: Allows users to create a new contact 
      tags:
        - Contacts
          
      requestBody:
        description: |+
          The request body for adding a contact should include:
             - `phone` - the phone numner
             - `name` - the contact name
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contact"
            examples:
              John:
                $ref: "#/components/examples/Contact/John"

      responses:
        "201":
          description: On successful creation of a new contact
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      contact:
                        $ref: "#/responses/objects/Contact"
              examples:
                CreateJohnContactSuccess:
                  value:
                    status: success 
                    message: Created contact successfully
                    data:
                      contact:
                        _id: 5aaff444bbccd3ee34
                        name: John
                        phone: "0728655088"
        "409":
          description: Conflicting phone numbers
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
              examples:
                PhoneConflict:
                  value:
                    status: fail
                    message: Contact already exists
                    data: {} 

  /contacts/{id}:
    delete:
      summary: Deleting contacts
      description: Allows users to delete a contact 
      tags:
        - Contacts
          
      parameters:
        - in: path
          name: id
          required: true
          description: The id of the contact to delete
          schema:
            type: string
          example: 1ababebbffdbff344

      responses:
        "200":
          description: Contact deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
              examples:
                DeleteContactSuccess:
                  value:
                    status: success
                    message: Contact deleted successfully
                    data:
                      deleteContactCount: 1
                      deleteSmsCount: 3

        "400":
          description: Invalid ObjectId for the contact
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: strng
              examples:
                InvalidObjectId:
                  value:
                    status: fail
                    message: Invalid contact object id


  /sms/add:
    post:
      summary: adding a new sms 
      description: Allow users to add new SMSs
      tags:
        - SMS
          
      requestBody:
        description: |+
          The request body for adding an sms should include:
             - `senderPhone` - the phone numner of the sender
             - `recipientPhne` - the phone numner of the recipient
             - `status` - message status
               - Draft 
               - Sent
               - Delivered
             - `message` - the message content
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SMS"
            examples:
              MessageFromSheelahToJohn:
                value:
                  status: Delivered
                  senderPhone: "0725000000"
                  recipientPhone: "0728000000"
                  message: Hallo, how are you today?

      responses:
        "201":
          description: SMS added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
              examples:
                AddSMSSuccess:
                  value:
                    status: success
                    message: Successfully recorded SMS
                    data:
                      createdSms:
                        status: Delivered
                        senderPhone: "0725000000"
                        recipientPhone: "0728000000"
                        message: Hallo, how are you today?
                        _id: 5abc3defc3efcd2abcd3e
        "400":
          description: Unknown SMS status
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
              examples:
                UnknownSMSStatus:
                  value:
                    status: fail
                    message: unknown sms status value in body
                    data:
                      validValues:
                        - Draft
                        - Sent
                        - Delivered
        "404":
          description: Sender or recipient not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
              examples:
                UnknownSender:
                  value:
                    status: fail
                    message: Sender not found
                UnknownRecipient:
                  value:
                    status: fail
                    message: Recipient not found

components:
  schemas:
    Contact:
      type: object
      properties:
        phone:
          type: string
        name:
          type: string

    SMS:
      type: object
      properties:
        senderPhone:
          type: string
        recipientPhone:
          type: string
        message: 
          type: string
        status:
          type: string

  examples:
    Contact:
      John:
        value:
          name: John
          phone: "0728655088"
          
responses:
  objects:
    Contact:
      allOf:
        - $ref: "#/components/schemas/Contact"
        - type: object
          properties:
            _id:
              type: string 
